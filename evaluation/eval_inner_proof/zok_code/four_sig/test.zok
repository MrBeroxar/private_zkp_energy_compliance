from "ecc/decaf377.zok" import verifyEddsa;
import "utils/casts/u32_to_field.zok" as u32_to_field;

def main(private field[2] R1, private field S1, private field[2] R2, private field S2, private field[2] R3, private field S3, private field[2] R4, private field S4, private field[2] A, private u32[32] Consumption, private u32[32] Production, field netResult){
    assert(verifyEddsa(R1, S1, A, Consumption[0..8], Production[0..8]));
    assert(verifyEddsa(R2, S2, A, Consumption[8..16], Production[8..16]));
    assert(verifyEddsa(R3, S3, A, Consumption[16..24], Production[16..24]));
    assert(verifyEddsa(R4, S4, A, Consumption[24..32], Production[24..32]));

    u32 mut sumConsumption = 0;
    u32 mut sumProduction = 0;

    for u32 i in 0..32 {
        sumConsumption = sumConsumption + Consumption[i];
        sumProduction = sumProduction + Production[i];
    }
    field fieldSumConsumption = u32_to_field(sumConsumption);
    field fieldSumProduction = u32_to_field(sumProduction);
    field calculatedNetResult = fieldSumConsumption - fieldSumProduction;
    assert(calculatedNetResult == netResult);

}
